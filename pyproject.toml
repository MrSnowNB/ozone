[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "o3-optimizer"
version = "1.0.0"
description = "AI-First Ollama Hardware Optimizer"
readme = "docs/README.md"
license = {text = "MIT"}
authors = [
    {name = "Ozone Team", email = "team@ozone.ai"}
]
maintainers = [
    {name = "Ozone Team", email = "team@ozone.ai"}
]
keywords = ["ollama", "optimization", "ai", "machine-learning", "hardware"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Hardware",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "psutil>=5.8.0",
    "pyyaml>=6.0",
    "matplotlib>=3.5.0; sys_platform == 'linux'",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.scripts]
o3 = "o3.cli.__main__:main"

[project.urls]
Homepage = "https://github.com/MrSnowNB/ozone"
Repository = "https://github.com/MrSnowNB/ozone.git"
Documentation = "https://o3-optimizer.readthedocs.io/"
Issues = "https://github.com/MrSnowNB/ozone/issues"
Changelog = "https://github.com/MrSnowNB/ozone/blob/main/CHANGELOG.md"

# Tool configurations
[tool.setuptools]
zip-safe = false
packages = {find = {where = ["src"]}}

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.pytest_cache
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src/o3"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
ignore_errors = true
